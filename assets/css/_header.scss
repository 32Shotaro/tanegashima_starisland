@charset "utf-8";
@use 'variables' as vars;

.header {
  // ヘッダーの当たり判定
  pointer-events: none;
  * {
    pointer-events: auto;
  }
  &-logo {
    background-color: vars.color(midnight);
    width: 130px;
    height: 270px;
    @include vars.respond-to(md, 'max') {
      width: 97px;
      height: 202px;
    }
    @include vars.respond-to(sm, 'max') {
      width: 70px;
      height: 145px;
    }
    a {
      display: flex;
      align-items: center;
      justify-content: center;
      width: inherit;
      height: inherit;
    }
  }
}

// グローバルナビ
.gNav {
  border-radius: 40px 0 0 40px;
  width: clamp(375px, 40vw, 600px);
  height: 100%;
  opacity: 0;
  transform: translate(100%, 0);
  transition: opacity 600ms cubic-bezier(0.16, 1, 0.3, 1), transform 600ms cubic-bezier(0.16, 1, 0.3, 1);
  @include vars.respond-to(md, 'max') {
    border-radius: 30px 0 0 30px;
  }
  @include vars.respond-to(sm, 'max') {
    border-radius: 0;
  }
  &::after {
    content: '';
    background: url(../images/common/main-bg.webp);
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    z-index: -1;
    opacity: 0.95;
  }
  &-trigger {
    $this: &;
    &:hover {
      color: vars.color(butter) !important;
      #{$this}-icon {
        border-color: vars.color(butter) !important;
        i {
          border-color: vars.color(butter) !important;
        }
      }
    }
    &-icon {
      position: relative;
      i {
        display: block;
        border-top: 1px solid vars.color(typography);
        width: 20px;
        height: 1px;
        position: absolute;
        inset: 50% auto auto calc(50% - 10px);
        transform-origin: center center;
        transition: opacity 600ms cubic-bezier(0.16, 1, 0.3, 1), transform 600ms cubic-bezier(0.16, 1, 0.3, 1);
        &:nth-child(1) {
          transform: translate(0, -7px);
        }
        &:nth-child(2) {
          transform: translate(-4px, 0);
        }
        &:nth-child(3) {
          transform: translate(0, 7px);
        }
      }
    }
    // アクティブ処理
    &.is-active {
      #{$this}-icon {
        i {
          &:nth-child(1) {
            transform: translate(0, 0) rotate(45deg);
          }
          &:nth-child(2) {
            opacity: 0;
            transform: translate(20px, 0);
          }
          &:nth-child(3) {
            transform: translate(0, 0) rotate(-45deg);
          }
        }
      }
    }
  }
  // アクティブ処理
  &.is-visible {
    opacity: 1;
    transform: translate(0, 0);
  }
}
